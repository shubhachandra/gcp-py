Sub GenerateIPRanges()
    Dim ws As Worksheet
    Set ws = ActiveSheet
    Dim lastRow As Integer
    Dim i As Integer
    Dim cidr As String
    Dim ipRange As String
    
    ' Find the last row with data in column I
    lastRow = ws.Cells(ws.Rows.Count, 9).End(xlUp).Row
    
    ' Loop through each row in column I (CIDR blocks)
    For i = 2 To lastRow
        cidr = ws.Cells(i, 9).Value ' CIDR block in column I
        If cidr <> "" Then
            ipRange = GenerateIPs(cidr)
            ws.Cells(i, 8).Value = ipRange ' Store result in column H
        End If
    Next i
    
    MsgBox "IP Ranges Generated!", vbInformation
End Sub

Function GenerateIPs(cidr As String) As String
    Dim shellObj As Object
    Set shellObj = CreateObject("WScript.Shell")
    Dim tempFile As String
    Dim command As String
    Dim ipList As String
    
    ' Use PowerShell to generate IPs
    tempFile = Environ("TEMP") & "\ips.txt"
    command = "powershell -Command ""1..((2 -shl (32 - (" & Split(cidr, "/")(1) & "))) - 2) | % { [System.Net.IPAddress]($_ + [System.Net.IPAddress]::Parse('" & Split(cidr, "/")(0) & "').Address).ToString() } > '" & tempFile & "'"""
    
    shellObj.Run command, 0, True
    
    ' Read generated IPs from temp file
    Open tempFile For Input As #1
    Do Until EOF(1)
        Line Input #1, ipList
        GenerateIPs = GenerateIPs & ipList & ", "
    Loop
    Close #1
    
    ' Remove trailing comma and space
    If Len(GenerateIPs) > 2 Then GenerateIPs = Left(GenerateIPs, Len(GenerateIPs) - 2)
    
    ' Clean up
    Kill tempFile
End Function
